<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>

        <!--        <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>-->
        <!--<script charset="utf-8" src="http://d3js.org/d3.v3.js"></script>-->
        <script src="https://d3js.org/d3.v3.min.js" charset="utf-8"></script>


        <script type='text/javascript' src="http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js"></script>
        <style>

            .link {
                stroke: #999;
                stroke-opacity: .1;
                stroke-width: 4px;
            }



            .node circle {
                stroke: #999;
                stroke-width: 1.5px;
            }

            .node text {
                font: 15px sans-serif;
                pointer-events: none;
            }

            .d3-tip {
                line-height: 1;
                color: black;
            }

        </style>
    </head>
    <body>

        <div id="area1" style="border:0px solid black;">
        </div>

        <script>
            //var QueryString = getparams();
            //alert (QueryString.author);
            var logos = {
                tool: "M26.834,14.693c1.816-2.088,2.181-4.938,1.193-7.334l-3.646,4.252l-3.594-0.699L19.596,7.45l3.637-4.242c-2.502-0.63-5.258,0.13-7.066,2.21c-1.907,2.193-2.219,5.229-1.039,7.693L5.624,24.04c-1.011,1.162-0.888,2.924,0.274,3.935c1.162,1.01,2.924,0.888,3.935-0.274l9.493-10.918C21.939,17.625,24.918,16.896,26.834,14.693z",
                resource: "M15.5,3.029l-10.8,6.235L4.7,21.735L15.5,27.971l10.8-6.235V9.265L15.5,3.029zM24.988,10.599L16,15.789v10.378c0,0.275-0.225,0.5-0.5,0.5s-0.5-0.225-0.5-0.5V15.786l-8.987-5.188c-0.239-0.138-0.321-0.444-0.183-0.683c0.138-0.238,0.444-0.321,0.683-0.183l8.988,5.189l8.988-5.189c0.238-0.138,0.545-0.055,0.684,0.184C25.309,10.155,25.227,10.461,24.988,10.599z",
                people: "M21.021,16.349c-0.611-1.104-1.359-1.998-2.109-2.623c-0.875,0.641-1.941,1.031-3.103,1.031c-1.164,0-2.231-0.391-3.105-1.031c-0.75,0.625-1.498,1.519-2.111,2.623c-1.422,2.563-1.578,5.192-0.35,5.874c0.55,0.307,1.127,0.078,1.723-0.496c-0.105,0.582-0.166,1.213-0.166,1.873c0,2.932,1.139,5.307,2.543,5.307c0.846,0,1.265-0.865,1.466-2.189c0.201,1.324,0.62,2.189,1.463,2.189c1.406,0,2.545-2.375,2.545-5.307c0-0.66-0.061-1.291-0.168-1.873c0.598,0.574,1.174,0.803,1.725,0.496C22.602,21.541,22.443,18.912,21.021,16.349zM15.808,13.757c2.362,0,4.278-1.916,4.278-4.279s-1.916-4.279-4.278-4.279c-2.363,0-4.28,1.916-4.28,4.279S13.445,13.757,15.808,13.757z",
                peoplebigger: "m 36.760932,31.470776 c -1.439649,-2.60126 -3.202095,-4.707713 -4.969255,-6.180347 -2.061687,1.510333 -4.573409,2.429255 -7.311328,2.429255 -2.742632,0 -5.256712,-0.921278 -7.316041,-2.429255 -1.767161,1.472634 -3.529607,3.579087 -4.973966,6.180347 -3.3505358,6.038975 -3.7181051,12.233458 -0.824676,13.840395 1.295918,0.723358 2.655452,0.183792 4.059754,-1.168681 -0.2474,1.371315 -0.391128,2.858086 -0.391128,4.413188 0,6.908415 2.683724,12.504421 5.991849,12.504421 1.993355,0 2.980608,-2.038125 3.454208,-5.15775 0.473599,3.119625 1.460853,5.15775 3.44714,5.15775 3.312836,0 5.996562,-5.596006 5.996562,-12.504421 0,-1.555102 -0.14374,-3.041873 -0.395845,-4.413188 1.409016,1.352467 2.766194,1.892039 4.064469,1.168681 2.893429,-1.606937 2.51879,-7.80142 -0.831743,-13.840395 z M 24.477993,25.363471 c 5.565375,0 10.079878,-4.514502 10.079878,-10.082235 C 34.557871,9.7135042 30.043368,5.199 24.477993,5.199 18.91026,5.199 14.3934,9.7135042 14.3934,15.281236 c 0,5.567733 4.51686,10.082235 10.084593,10.082235 z",
                resourcebigger: "M 22.875,3.029 4.7,13.521697 4.7,34.508773 22.875,45.003153 41.05,34.510456 V 13.52338 L 22.875,3.029 z m 15.967074,12.739329 -15.125639,8.734097 v 17.464829 c 0,0.462789 -0.378646,0.841435 -0.841435,0.841435 -0.462789,0 -0.841435,-0.378646 -0.841435,-0.841435 V 24.497377 L 6.9096088,15.766646 C 6.5074028,15.53441 6.3694074,15.019451 6.6016435,14.617245 6.8338796,14.216722 7.348838,14.077044 7.751044,14.30928 l 15.125639,8.732414 15.125639,-8.732414 c 0.400523,-0.232236 0.917164,-0.09256 1.151083,0.309648 0.22887,0.402206 0.09088,0.917165 -0.311331,1.149401 z"

            };

            var groupLogo = {
                0: logos.people,
                1: logos.resource,
                2: logos.peoplebigger,
                3: logos.resourcebigger
            }

            var width = 800,height = 800;

            //var color = d3.scale.category20();

            var color = d3.scale.ordinal()

                    .range(["#3cb371", "#008b8b", "#9acd32", "#20b2aa", "#87cefa", "#90ee90", "#98fb98", "#4169e1", "#778899", "#800080", "#add8e6", "#afeeee", "#b0c4de", "#b0e0e6", "#c0c0c0", "#d2b48c", "#d3d3d3", "#db7093", "#ff0000", "#0000ff", "#ffff00", "#e9967a", "#eee8aa", "#f0e68c", "#f0f8ff", "#f08080", "#faebd7", "#fafad2", "#ff7f50", "#ffa07a", "#ffa500", "#ffb6c1", "#ffe4c4", "#ffffe0", ]);

            var radius = d3.scale.sqrt()
                    .range([0, 6]);

            var svg = d3.select("#area1").append("svg")
                    .attr("width", width)
                    .attr("height", height);

            var tip = d3.tip()
                    .attr('class', 'd3-tip')
                    .offset([-10, 0])
                    .html(function (d) {
                        if (d.size === 10)
                            return   d.affi;
                        else
                            return d.atom + "(" + d.affi + ")";
                    });
            svg.call(tip);

            var force = d3.layout.force()
                    .size([width, height])
                    .charge(-700)
                    //.charge(function(d){ var a=d.source.size; alert (a);return -700*a;})
                    .linkDistance(80)
                    .linkStrength(0.1);
            //.linkDistance(function(d) { return radius(d.source.size) + radius(d.target.size) + 20; });

            d3.json("output_fixed.json", function (error, graph) {
                if (error)
                    throw error;

                force
                        .nodes(graph.nodes)
                        .links(graph.links)
                        .on("tick", tick)
                        .start();
                //.on("end", reload);



                var link = svg.selectAll(".link")
                        .data(graph.links)
                        .enter().append("g")
                        .attr("class", "link");

                link.append("line")
                //     .style("stroke-width", function(d) { return (d.bond * 2 - 1) * 2 + "px"; });

                link.filter(function (d) {
                    return d.bond >= 1;
                }).append("line")
                        .attr("class", "separator");

                var node = svg.selectAll(".node")
                        .data(graph.nodes)
                        .enter().append("g")
                        .attr("class", "node")
                        .call(force.drag)
                        .on('mouseover', tip.show) //Added
                        .on('mouseout', tip.hide); //Added



                node.append("path")
                        //.attr("r", function(d) { return radius(d.size); })
                        .attr("d", function (d) {

                            if (d.group in groupLogo)
                                return groupLogo[d.group];
                            return logos.people;
                        })
                        .style("fill", function (d) {
                            return color(d.affi);
                        });

                node.append("text")
                        .attr("dy", ".35em")
                        .attr("text-anchor", "top")
                        .text(function (d) {
                            if (d.size === 10)
                                return d.atom;
                        });

                function tick() {
                    link.selectAll("line")
                            .attr("x1", function (d) {
                                return d.source.x;
                            })
                            .attr("y1", function (d) {
                                return d.source.y;
                            })
                            .attr("x2", function (d) {
                                return d.target.x;
                            })
                            .attr("y2", function (d) {
                                return d.target.y;
                            });

                    node.attr("transform", function (d) {
                        return "translate(" + (d.x - 15) + "," + (d.y - 15) + ")";
                    });
                }

                function reload() {
                    //window.location.reload();
                    alert("Graph ended");

                }

            });

        </script>
    </body>
</html>
